"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/creator/become-a-creator/page",{

/***/ "(app-pages-browser)/./lib/api.ts":
/*!********************!*\
  !*** ./lib/api.ts ***!
  \********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiFetch: () => (/* binding */ apiFetch),\n/* harmony export */   apiLogout: () => (/* binding */ apiLogout),\n/* harmony export */   apiPost: () => (/* binding */ apiPost),\n/* harmony export */   apiUpload: () => (/* binding */ apiUpload)\n/* harmony export */ });\n/* harmony import */ var _stores_useAuthStore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/stores/useAuthStore */ \"(app-pages-browser)/./stores/useAuthStore.ts\");\n\nconst BASE_URL = \"http://localhost:3000/api\";\nasync function apiFetch(endpoint, options) {\n    try {\n        const res = await fetch(\"\".concat(BASE_URL).concat(endpoint), {\n            ...options,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                ...(options === null || options === void 0 ? void 0 : options.headers) || {}\n            },\n            credentials: \"include\"\n        });\n        if (!res.ok) {\n            const errorBody = await res.json();\n            const error = new Error(errorBody.message || \"API error\");\n            // Attach extra fields to the error object\n            error.statusCode = errorBody.statusCode;\n            error.raw = errorBody.raw;\n            error.error = errorBody.error;\n            throw error;\n        }\n        return res.json();\n    } catch (e) {\n        throw new Error((e === null || e === void 0 ? void 0 : e.message) || \"API error\");\n    }\n}\nasync function apiPost(endpoint, body) {\n    try {\n        const res = await fetch(\"\".concat(BASE_URL).concat(endpoint), {\n            method: \"POST\",\n            headers: {\n                \"Authorization\": \"Bearer \".concat(localStorage.getItem(\"token\") || \"\"),\n                \"Content-Type\": \"application/json\"\n            },\n            credentials: \"include\",\n            body: JSON.stringify(body)\n        });\n        let responseBody = null;\n        try {\n            responseBody = await res.json();\n        } catch (err) {\n            throw new Error(\"Unexpected error format from \".concat(endpoint));\n        }\n        // if (!res.ok) {\n        //   console.log(res)\n        //   // Construct a custom error with extra details\n        //   const error: any = new Error(responseBody.message || \"API error\");\n        //   error.statusCode = responseBody.statusCode || res.status;\n        //   error.statusText = responseBody.error || res.statusText;\n        //   error.raw = responseBody;\n        //   console.log(\"responseBody~~\", responseBody)\n        //   throw error;\n        // }\n        /*\r\n    error: \"Conflict\"\r\n    message: \"Subscription already created\"\r\n    statusCode: 409\r\n    */ return responseBody;\n    } catch (e) {\n        throw new Error((e === null || e === void 0 ? void 0 : e.message) || \"API error\");\n    }\n}\nasync function apiUpload(formData) {\n    try {\n        const res = await fetch(\"\".concat(BASE_URL, \"/uploads/profile-images\"), {\n            method: \"POST\",\n            body: formData,\n            credentials: \"include\"\n        });\n        if (!res.ok) {\n            const error = await res.json();\n            throw new Error(error.message || \"Upload failed\");\n        }\n        const data = await res.json();\n        return data.url;\n    } catch (e) {\n        throw new Error((e === null || e === void 0 ? void 0 : e.message) || \"API error\");\n    }\n}\nasync function apiLogout() {\n    await fetch(\"\".concat(BASE_URL, \"/auth/logout\"), {\n        method: \"POST\",\n        credentials: \"include\"\n    });\n    _stores_useAuthStore__WEBPACK_IMPORTED_MODULE_0__.useAuthStore.getState().clearUser();\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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cmNlcyI6WyJEOlxccHJvamVjdDFcXEVwaWNMaW54XFxsaWJcXGFwaS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VBdXRoU3RvcmUgfSBmcm9tIFwiQC9zdG9yZXMvdXNlQXV0aFN0b3JlXCI7XHJcblxyXG5jb25zdCBCQVNFX1VSTCA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0FQSV9VUkw7XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gYXBpRmV0Y2goZW5kcG9pbnQ6IHN0cmluZywgb3B0aW9ucz86IFJlcXVlc3RJbml0KSB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGAke0JBU0VfVVJMfSR7ZW5kcG9pbnR9YCwge1xyXG4gICAgICAuLi5vcHRpb25zLFxyXG4gICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbiAgICAgICAgLi4uKG9wdGlvbnM/LmhlYWRlcnMgfHwge30pLFxyXG4gICAgICB9LFxyXG4gICAgICBjcmVkZW50aWFsczogXCJpbmNsdWRlXCIsIC8vIFNlbmQgY29va2llcyBpbmNsdWRpbmcgSHR0cE9ubHkgcmVmcmVzaC9hY2Nlc3MgdG9rZW5zXHJcbiAgICB9KTtcclxuXHJcbiAgICBpZiAoIXJlcy5vaykge1xyXG4gICAgICBjb25zdCBlcnJvckJvZHkgPSBhd2FpdCByZXMuanNvbigpO1xyXG4gICAgICBjb25zdCBlcnJvciA9IG5ldyBFcnJvcihlcnJvckJvZHkubWVzc2FnZSB8fCBcIkFQSSBlcnJvclwiKTtcclxuICAgICAgLy8gQXR0YWNoIGV4dHJhIGZpZWxkcyB0byB0aGUgZXJyb3Igb2JqZWN0XHJcbiAgICAgIChlcnJvciBhcyBhbnkpLnN0YXR1c0NvZGUgPSBlcnJvckJvZHkuc3RhdHVzQ29kZTtcclxuICAgICAgKGVycm9yIGFzIGFueSkucmF3ID0gZXJyb3JCb2R5LnJhdztcclxuICAgICAgKGVycm9yIGFzIGFueSkuZXJyb3IgPSBlcnJvckJvZHkuZXJyb3I7XHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gIH0gY2F0Y2ggKGU6IGFueSkge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKGU/Lm1lc3NhZ2UgfHwgXCJBUEkgZXJyb3JcIik7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gYXBpUG9zdDxUPihlbmRwb2ludDogc3RyaW5nLCBib2R5OiBhbnkpOiBQcm9taXNlPFQ+IHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYCR7QkFTRV9VUkx9JHtlbmRwb2ludH1gLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICBcIkF1dGhvcml6YXRpb25cIjogYEJlYXJlciAke2xvY2FsU3RvcmFnZS5nZXRJdGVtKFwidG9rZW5cIikgfHwgXCJcIn1gLFxyXG4gICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4gICAgICB9LFxyXG4gICAgICBjcmVkZW50aWFsczogXCJpbmNsdWRlXCIsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGJvZHkpLFxyXG4gICAgfSk7XHJcblxyXG4gICAgbGV0IHJlc3BvbnNlQm9keTogYW55ID0gbnVsbDtcclxuXHJcbiAgICB0cnkge1xyXG4gICAgICByZXNwb25zZUJvZHkgPSBhd2FpdCByZXMuanNvbigpO1xyXG4gICAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcihgVW5leHBlY3RlZCBlcnJvciBmb3JtYXQgZnJvbSAke2VuZHBvaW50fWApO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIGlmICghcmVzLm9rKSB7XHJcblxyXG4gICAgLy8gICBjb25zb2xlLmxvZyhyZXMpXHJcblxyXG4gICAgLy8gICAvLyBDb25zdHJ1Y3QgYSBjdXN0b20gZXJyb3Igd2l0aCBleHRyYSBkZXRhaWxzXHJcbiAgICAvLyAgIGNvbnN0IGVycm9yOiBhbnkgPSBuZXcgRXJyb3IocmVzcG9uc2VCb2R5Lm1lc3NhZ2UgfHwgXCJBUEkgZXJyb3JcIik7XHJcbiAgICAvLyAgIGVycm9yLnN0YXR1c0NvZGUgPSByZXNwb25zZUJvZHkuc3RhdHVzQ29kZSB8fCByZXMuc3RhdHVzO1xyXG4gICAgLy8gICBlcnJvci5zdGF0dXNUZXh0ID0gcmVzcG9uc2VCb2R5LmVycm9yIHx8IHJlcy5zdGF0dXNUZXh0O1xyXG4gICAgLy8gICBlcnJvci5yYXcgPSByZXNwb25zZUJvZHk7XHJcbiAgICAvLyAgIGNvbnNvbGUubG9nKFwicmVzcG9uc2VCb2R5fn5cIiwgcmVzcG9uc2VCb2R5KVxyXG4gICAgLy8gICB0aHJvdyBlcnJvcjtcclxuICAgIC8vIH1cclxuXHJcbiAgICAvKlxyXG4gICAgZXJyb3I6IFwiQ29uZmxpY3RcIlxyXG4gICAgbWVzc2FnZTogXCJTdWJzY3JpcHRpb24gYWxyZWFkeSBjcmVhdGVkXCJcclxuICAgIHN0YXR1c0NvZGU6IDQwOVxyXG4gICAgKi9cclxuICAgIHJldHVybiByZXNwb25zZUJvZHk7XHJcbiAgfSBjYXRjaCAoZTogYW55KSB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoZT8ubWVzc2FnZSB8fCBcIkFQSSBlcnJvclwiKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBhcGlVcGxvYWQoZm9ybURhdGE6IEZvcm1EYXRhKTogUHJvbWlzZTxzdHJpbmc+IHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYCR7QkFTRV9VUkx9L3VwbG9hZHMvcHJvZmlsZS1pbWFnZXNgLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgIGJvZHk6IGZvcm1EYXRhLFxyXG4gICAgICBjcmVkZW50aWFsczogXCJpbmNsdWRlXCIsIC8vIEluIGNhc2UgYmFja2VuZCB2YWxpZGF0ZXMgc2Vzc2lvblxyXG4gICAgfSk7XHJcblxyXG4gICAgaWYgKCFyZXMub2spIHtcclxuICAgICAgY29uc3QgZXJyb3IgPSBhd2FpdCByZXMuanNvbigpO1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoZXJyb3IubWVzc2FnZSB8fCBcIlVwbG9hZCBmYWlsZWRcIik7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKCk7XHJcbiAgICByZXR1cm4gZGF0YS51cmw7XHJcbiAgfSBjYXRjaCAoZTogYW55KSB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoZT8ubWVzc2FnZSB8fCBcIkFQSSBlcnJvclwiKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBhcGlMb2dvdXQoKSB7XHJcbiAgYXdhaXQgZmV0Y2goYCR7QkFTRV9VUkx9L2F1dGgvbG9nb3V0YCwge1xyXG4gICAgbWV0aG9kOiBcIlBPU1RcIixcclxuICAgIGNyZWRlbnRpYWxzOiBcImluY2x1ZGVcIixcclxuICB9KTtcclxuICB1c2VBdXRoU3RvcmUuZ2V0U3RhdGUoKS5jbGVhclVzZXIoKTtcclxufVxyXG4iXSwibmFtZXMiOlsidXNlQXV0aFN0b3JlIiwiQkFTRV9VUkwiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfQVBJX1VSTCIsImFwaUZldGNoIiwiZW5kcG9pbnQiLCJvcHRpb25zIiwicmVzIiwiZmV0Y2giLCJoZWFkZXJzIiwiY3JlZGVudGlhbHMiLCJvayIsImVycm9yQm9keSIsImpzb24iLCJlcnJvciIsIkVycm9yIiwibWVzc2FnZSIsInN0YXR1c0NvZGUiLCJyYXciLCJlIiwiYXBpUG9zdCIsImJvZHkiLCJtZXRob2QiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwiSlNPTiIsInN0cmluZ2lmeSIsInJlc3BvbnNlQm9keSIsImVyciIsImFwaVVwbG9hZCIsImZvcm1EYXRhIiwiZGF0YSIsInVybCIsImFwaUxvZ291dCIsImdldFN0YXRlIiwiY2xlYXJVc2VyIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/api.ts\n"));

/***/ })

});